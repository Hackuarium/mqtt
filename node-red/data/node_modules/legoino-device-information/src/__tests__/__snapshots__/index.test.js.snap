// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`legoino-device-information test OpenBio 1`] = `
Object {
  "description": "",
  "events": Array [
    Object {
      "description": "",
      "id": 1,
      "name": "Arduino boot",
    },
    Object {
      "description": "",
      "id": 2,
      "name": "Set safe mode",
    },
    Object {
      "description": "0:stepper, 1:food, 2:pid, 7:sedimentation, 8:filling, 9:emptying",
      "flags": Object {
        "0": "stepper",
        "1": "food",
        "2": "pid",
        "7": "sedimentation",
        "8": "filling",
        "9": "emptying",
      },
      "id": 3,
      "name": "Status enable",
    },
    Object {
      "description": "0:stepper, 1:food, 2:pid, 7:sedimentation, 8:filling, 9:emptying",
      "flags": Object {
        "0": "stepper",
        "1": "food",
        "2": "pid",
        "7": "sedimentation",
        "8": "filling",
        "9": "emptying",
      },
      "id": 4,
      "name": "Status disable",
    },
    Object {
      "description": "0:stepper, 1:food, 2:pid, 7:sedimentation, 8:filling, 9:emptying",
      "flags": Object {
        "0": "pcb temperature probe",
        "1": "liquid temperature probe",
        "2": "pcb temperature range",
        "3": "liquid temperature range",
        "4": "target temperature range",
        "5": "weight range",
      },
      "id": 6,
      "name": "Error: failed",
    },
    Object {
      "description": "0:stepper, 1:food, 2:pid, 7:sedimentation, 8:filling, 9:emptying",
      "flags": Object {
        "0": "pcb temperature probe",
        "1": "liquid temperature probe",
        "2": "pcb temperature range",
        "3": "liquid temperature range",
        "4": "target temperature range",
        "5": "weight range",
      },
      "id": 7,
      "name": "Error: recover",
    },
    Object {
      "description": "",
      "id": 20,
      "name": "Rotation start",
    },
    Object {
      "description": "",
      "id": 21,
      "name": "Rotation stop",
    },
    Object {
      "description": "",
      "id": 150,
      "name": "Not found log entry N",
    },
    Object {
      "description": "",
      "id": 255,
      "name": "Save all parameters",
    },
    Object {
      "description": "",
      "id": 256,
      "name": "Change value of A",
    },
    Object {
      "description": "",
      "id": 257,
      "name": "Change value of B",
    },
  ],
  "id": "$",
  "kind": "OpenBio",
  "name": "Open bioreactor",
  "numberLogParameters": 26,
  "numberParameters": 52,
  "parameters": Array [
    Object {
      "description": "Temperature of the bioreactor solution",
      "factor": 100,
      "label": "A",
      "name": "T° LIQ",
      "unit": "°C",
      "variable": "liquidTemp",
      "writable": false,
    },
    Object {
      "description": "Temperature of the bioreactor circuit",
      "factor": 100,
      "label": "B",
      "name": "T° PCB",
      "unit": "°C",
      "variable": "pcbTemp",
      "writable": false,
    },
    Object {
      "description": "PID absolute value",
      "factor": 1,
      "label": "C",
      "name": "Pid",
      "unit": "",
      "variable": "pidTemp",
      "writable": false,
    },
    Object {
      "description": "Target temperature",
      "factor": 100,
      "label": "D",
      "name": "T° target",
      "unit": "°C",
      "variable": "targetTemp",
      "writable": true,
    },
    Object {
      "description": "Weight of the bioreactor tank, in internal value",
      "factor": 1,
      "label": "E",
      "name": "Weight",
      "unit": "",
      "variable": "weight",
      "writable": false,
    },
    Object {
      "description": "Weight of the bioreactor tank, in gr if calibrated",
      "factor": 1,
      "label": "F",
      "name": "Weight (g)",
      "unit": "g",
      "variable": "grWeight",
      "writable": false,
    },
    Object {
      "description": "Time in min since last weight event",
      "factor": 1,
      "label": "G",
      "name": "Time since last event",
      "unit": "min",
      "variable": "waitSinceLast",
      "writable": false,
    },
    Object {
      "description": "Weight min in internal unit",
      "factor": 1,
      "label": "H",
      "name": "Weight min",
      "unit": "",
      "variable": "minWeight",
      "writable": false,
    },
    Object {
      "description": "Weight max in internal unit",
      "factor": 1,
      "label": "I",
      "name": "Weight max",
      "unit": "",
      "variable": "maxWeight",
      "writable": false,
    },
    Object {
      "label": "J",
    },
    Object {
      "label": "K",
    },
    Object {
      "label": "L",
    },
    Object {
      "label": "M",
    },
    Object {
      "label": "N",
    },
    Object {
      "label": "O",
    },
    Object {
      "label": "P",
    },
    Object {
      "label": "Q",
    },
    Object {
      "label": "R",
    },
    Object {
      "label": "S",
    },
    Object {
      "label": "T",
    },
    Object {
      "label": "U",
    },
    Object {
      "label": "V",
    },
    Object {
      "label": "W",
    },
    Object {
      "label": "X",
    },
    Object {
      "description": "
            bit 0: pcb probe, 1: liquid probe, 2: pcb temperature,
            3: liquid temperature, 4: target temp. range, 5: weight range",
      "factor": 1,
      "flags": Object {
        "liquidProbe": Object {
          "bit": 1,
          "description": "Liquid temperature probe not responding",
        },
        "liquidTemperature": Object {
          "bit": 3,
          "description": "Liquid temperature out of range",
        },
        "pcbProbe": Object {
          "bit": 0,
          "description": "PCB temperature probe not responding",
        },
        "pcbTemperature": Object {
          "bit": 2,
          "description": "PCB temperature out of range",
        },
        "targetTemperature": Object {
          "bit": 4,
          "description": "Target temperature out of range",
        },
        "weight": Object {
          "bit": 5,
          "description": "Weight out of range",
        },
      },
      "label": "Y",
      "name": "Error",
      "unit": "",
      "variable": "error",
      "writable": true,
    },
    Object {
      "description": "Status of the Bioreactor, the bits of this integer code
        for the state of specific elements of the reactor (eg. motor ON/OFF, PUMP ON/OFF etc.).
        bits: 0: stepper, 1: weight, 2: pid, 7: sedimentation, 8: filling, 9: emptying
        ",
      "factor": 1,
      "flags": Object {
        "emptying": Object {
          "bit": 9,
          "description": "Emptying tank",
        },
        "filling": Object {
          "bit": 8,
          "description": "Filling tank",
        },
        "food": Object {
          "bit": 1,
          "description": "Food running",
        },
        "pid": Object {
          "bit": 2,
          "description": "PID running",
        },
        "sedimentation": Object {
          "bit": 7,
          "description": "Sedimentation running",
        },
        "stepper": Object {
          "bit": 0,
          "description": "Stepper running",
        },
      },
      "label": "Z",
      "name": "Status",
      "unit": "",
      "variable": "status",
      "writable": true,
    },
    Object {
      "description": "",
      "factor": 1,
      "label": "AA",
      "name": "Stepper speed",
      "unit": "RPM",
      "variable": "stepperSpeed",
      "writable": true,
    },
    Object {
      "description": "Time in (s) for which the stepper stays on",
      "factor": 1,
      "label": "AB",
      "name": "Stepper on delay",
      "unit": "s",
      "variable": "stepperOnDelay",
      "writable": true,
    },
    Object {
      "description": "Time to wait in (s) before between stirring periods",
      "factor": 1,
      "label": "AC",
      "name": "Stepper off delay",
      "unit": "s",
      "variable": "stepperOffDelay",
      "writable": true,
    },
    Object {
      "label": "AD",
    },
    Object {
      "label": "AE",
    },
    Object {
      "description": "Sedimentation time in min after Semi-batch operation,corresponds to the waiting time without stirring before emptying the reactor to the minimum level",
      "factor": 1,
      "label": "AF",
      "max": 32767,
      "min": 0,
      "name": "Sedimentation Time",
      "unit": "min",
      "variable": "sedTime",
      "writable": true,
    },
    Object {
      "description": "Filled time in min after Semi-batch operation,corresponds to the total time with and without stirring before emptying the reactor to the minimum levelmust be set longer than the sedimentation time if stirring is desired",
      "factor": 1,
      "label": "AG",
      "max": 32767,
      "min": 0,
      "name": "Filled Time",
      "unit": "min",
      "variable": "filledTime",
      "writable": true,
    },
    Object {
      "description": "Factor allowing to convert the internal weight value to g",
      "factor": 1,
      "label": "AH",
      "name": "Weight factor",
      "unit": "",
      "variable": "weightFactor",
      "writable": false,
    },
    Object {
      "description": "",
      "factor": 1,
      "label": "AI",
      "name": "Weight offset",
      "unit": "",
      "variable": "weightOffset",
      "writable": false,
    },
    Object {
      "label": "AJ",
    },
    Object {
      "label": "AK",
    },
    Object {
      "label": "AL",
    },
    Object {
      "label": "AM",
    },
    Object {
      "label": "AN",
    },
    Object {
      "label": "AO",
    },
    Object {
      "label": "AP",
    },
    Object {
      "label": "AQ",
    },
    Object {
      "label": "AR",
    },
    Object {
      "label": "AS",
    },
    Object {
      "label": "AT",
    },
    Object {
      "label": "AU",
    },
    Object {
      "label": "AV",
    },
    Object {
      "label": "AW",
    },
    Object {
      "label": "AX",
    },
    Object {
      "label": "AY",
    },
    Object {
      "description": "pid - food - stepper : ex. 1: only stepper",
      "factor": 1,
      "flags": Object {
        "food": Object {
          "bit": 1,
          "description": "Food control",
        },
        "pid": Object {
          "bit": 2,
          "description": "PID control",
        },
        "stepper": Object {
          "bit": 0,
          "description": "Stepper control",
        },
      },
      "label": "AZ",
      "name": "Enable",
      "unit": "",
      "variable": "enable",
      "writable": true,
    },
  ],
  "url": "",
}
`;

exports[`legoino-device-information test OpenSpectro 1`] = `
Object {
  "description": "",
  "id": "S",
  "kind": "OpenSpectro",
  "name": "Open spectrophotometer",
  "numberParameters": 26,
  "parameters": Array [
    Object {
      "description": "which point of the linear detector is the maximum for red",
      "factor": 1,
      "label": "A",
      "name": "Red point",
      "unit": "pixel#",
      "writable": false,
    },
    Object {
      "description": "which point of the linear detector is the maximum for green",
      "factor": 1,
      "label": "B",
      "name": "Green point",
      "unit": "pixel#",
      "writable": false,
    },
    Object {
      "description": "which point of the linear detector is the maximum for blue",
      "factor": 1,
      "label": "C",
      "name": "Blue point",
      "unit": "pixel#",
      "writable": false,
    },
    Object {
      "description": "0 means no compression, can be set",
      "factor": 1,
      "label": "D",
      "name": "Compression",
      "unit": "",
      "writable": true,
    },
    Object {
      "description": "Red led intensity (0 to 255)",
      "factor": 1,
      "label": "E",
      "name": "R-Intensity",
      "unit": "",
      "writable": false,
    },
    Object {
      "description": "Green led intensity (0 to 255)",
      "factor": 1,
      "label": "F",
      "name": "G-Intensity",
      "unit": "",
      "writable": false,
    },
    Object {
      "description": "Blue led intensity (0 to 255)",
      "factor": 1,
      "label": "G",
      "name": "B-Intensity",
      "unit": "",
      "writable": false,
    },
    Object {
      "description": "Number of scans (maximum 64)",
      "factor": 1,
      "label": "H",
      "max": 64,
      "min": 1,
      "name": "Scan#",
      "unit": "",
      "writable": true,
    },
    Object {
      "description": "Delay between experiments in seconds",
      "factor": 1,
      "label": "I",
      "name": "DelayExp",
      "unit": "s",
      "writable": false,
    },
    Object {
      "description": "Accumulation time in ms(in ms, good value=30)",
      "factor": 1,
      "label": "J",
      "name": "Acq Time",
      "unit": "ms",
      "writable": true,
    },
    Object {
      "description": "Red maximum wavelength (nm)",
      "factor": 1,
      "label": "K",
      "name": "lambda-R",
      "unit": "nm",
      "writable": false,
    },
    Object {
      "description": "Green maximum wavelength (nm)",
      "factor": 1,
      "label": "L",
      "name": "lambda-G",
      "unit": "nm",
      "writable": false,
    },
    Object {
      "description": "Blue maximum wavelength (nm)",
      "factor": 1,
      "label": "M",
      "name": "lambda-M",
      "unit": "nm",
      "writable": false,
    },
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    Object {
      "description": "Set intensity of red led for test (0 -> 255)",
      "factor": 1,
      "label": "U",
      "name": "red test",
      "unit": "",
      "writable": false,
    },
    Object {
      "description": "Set intensity of green led for test (0 -> 255)",
      "factor": 1,
      "label": "V",
      "name": "green test",
      "unit": "",
      "writable": false,
    },
    Object {
      "description": "Set intensity of blue led for test (0 -> 255)",
      "factor": 1,
      "label": "W",
      "name": "blue test",
      "unit": "",
      "writable": false,
    },
    Object {
      "description": "Set intensity of white led for test (0 -> 255)",
      "factor": 1,
      "label": "X",
      "name": "white test",
      "unit": "",
      "writable": false,
    },
    Object {
      "label": "Y",
    },
    Object {
      "label": "Z",
    },
  ],
  "url": "",
}
`;

exports[`legoino-device-information test SimpleSpectro 1`] = `
Object {
  "description": "",
  "id": "T",
  "kind": "SimpleSpectro",
  "name": "Simple spectrophotometer",
  "numberParameters": 26,
  "parameters": Array [
    Object {
      "description": "Frequency related to the energy of red led through sample",
      "factor": 1,
      "label": "A",
      "name": "Transmission of sample (Red)",
      "unit": "Hz",
      "writable": false,
    },
    Object {
      "description": "Frequency related to the energy of green led through sample",
      "factor": 1,
      "label": "B",
      "name": "Transmission of sample (Green)",
      "unit": "Hz",
      "writable": false,
    },
    Object {
      "description": "Frequency related to the energy of blue led through sample",
      "factor": 1,
      "label": "C",
      "name": "Transmission of sample (Blue)",
      "unit": "Hz",
      "writable": false,
    },
    Object {
      "description": "Frequency related to the energy of blue perpendicular led re-emitted by sample (fluorescence)",
      "factor": 1,
      "label": "D",
      "name": "Emission of sample (Blue)",
      "unit": "Hz",
      "writable": false,
    },
    undefined,
    Object {
      "description": "Frequency related to the energy of red led through blank",
      "factor": 1,
      "label": "F",
      "name": "Transmission of blank (Red)",
      "unit": "Hz",
      "writable": false,
    },
    Object {
      "description": "Frequency related to the energy of green led through blank",
      "factor": 1,
      "label": "G",
      "name": "Transmission of blank (Green)",
      "unit": "Hz",
      "writable": false,
    },
    Object {
      "description": "Frequency related to the energy of blue led through blank",
      "factor": 1,
      "label": "H",
      "name": "Transmission of blank (Blue)",
      "unit": "Hz",
      "writable": false,
    },
    Object {
      "description": "Frequency related to the energy of blue perpendicular led re-emitted by blank (fluorescence)",
      "factor": 1,
      "label": "I",
      "name": "Emission of blank (Blue)",
      "unit": "Hz",
      "writable": false,
    },
    undefined,
    Object {
      "description": "Delay before the acquisition of the blank in seconds",
      "factor": 1,
      "label": "K",
      "name": "Delay before blank",
      "unit": "s",
      "writable": true,
    },
    Object {
      "description": "Delay before the acquisition of the sample in seconds",
      "factor": 1,
      "label": "L",
      "name": "Delay before sample",
      "unit": "s",
      "writable": true,
    },
    Object {
      "description": "Delay between the acquisition of the experiments (kinetic) in seconds",
      "factor": 1,
      "label": "M",
      "name": "Delay between experiments",
      "unit": "s",
      "writable": true,
    },
    Object {
      "description": "Number of experiments for kinetic (max 240 / (number colors + 1))",
      "factor": 1,
      "label": "N",
      "name": "Nb experiments",
      "unit": "",
      "writable": true,
    },
    Object {
      "description": "Number of the next experiment",
      "factor": 1,
      "label": "O",
      "name": "Next exp. number",
      "unit": "",
      "writable": false,
    },
    Object {
      "description": "Current waiting time before next experiment",
      "factor": 1,
      "label": "P",
      "name": "Waiting time",
      "unit": "s",
      "writable": false,
    },
    Object {
      "description": "Number of acquisitions of 100ms that will be taken (default 10). This value could be reduced for fast kinetic",
      "factor": 1,
      "label": "Q",
      "name": "Nb sampling",
      "unit": "",
      "writable": true,
    },
    Object {
      "description": " Invert the rotary button direction",
      "factor": 1,
      "label": "R",
      "name": "Invert rotary",
      "unit": "",
      "writable": true,
    },
    Object {
      "description": "Current battery voltage",
      "factor": 100,
      "label": "S",
      "name": "Battery voltage",
      "unit": "V",
      "writable": true,
    },
    Object {
      "description": "Current temperature",
      "factor": 100,
      "label": "T",
      "name": "Temperature",
      "unit": "°C",
      "writable": true,
    },
    undefined,
    Object {
      "description": "Active leds and other. A number between 0 and 63. Each bit represents a function (Red, Green, Blue, UV, Voltage, Temperature). 5 would correspond to Red and Blue (binary combination).",
      "factor": 1,
      "label": "V",
      "name": "Active channels",
      "unit": "",
      "writable": true,
    },
    Object {
      "description": "Error",
      "factor": 1,
      "label": "W",
      "name": "Error",
      "unit": "",
      "writable": true,
    },
    Object {
      "description": "Value of the channel that will be displayed in the result",
      "factor": 1,
      "label": "X",
      "name": "Result channel",
      "unit": "",
      "writable": true,
    },
    Object {
      "description": "Status",
      "factor": 1,
      "label": "Y",
      "name": "Status",
      "unit": "",
      "writable": true,
    },
    Object {
      "description": "Current menu",
      "factor": 1,
      "label": "Z",
      "name": "Current menu",
      "unit": "",
      "writable": true,
    },
  ],
  "url": "",
}
`;

exports[`legoino-device-information test Solar2015 1`] = `
Object {
  "description": "",
  "id": "#",
  "kind": "Solar",
  "name": "Solar decathlon 2015",
  "numberLogParameters": 4,
  "numberParameters": 4,
  "parameters": Array [
    Object {
      "description": "",
      "factor": 100,
      "label": "A",
      "name": "Temperature",
      "unit": "°C",
      "writable": false,
    },
    Object {
      "description": "",
      "factor": 1,
      "label": "B",
      "name": "Light",
      "unit": "",
      "writable": false,
    },
    Object {
      "description": "",
      "factor": 1,
      "label": "C",
      "name": "Pressure",
      "unit": "",
      "writable": false,
    },
    Object {
      "description": "",
      "factor": 10,
      "label": "D",
      "name": "Humidity",
      "unit": "%",
      "writable": false,
    },
  ],
  "url": "",
}
`;

exports[`legoino-device-information test fromDeviceID 1`] = `
Object {
  "description": "",
  "events": Array [
    Object {
      "description": "",
      "id": 1,
      "name": "Arduino boot",
    },
    Object {
      "description": "",
      "id": 2,
      "name": "Set safe mode",
    },
    Object {
      "description": "0:stepper, 1:food, 2:pid, 7:sedimentation, 8:filling, 9:emptying",
      "flags": Object {
        "0": "stepper",
        "1": "food",
        "2": "pid",
        "7": "sedimentation",
        "8": "filling",
        "9": "emptying",
      },
      "id": 3,
      "name": "Status enable",
    },
    Object {
      "description": "0:stepper, 1:food, 2:pid, 7:sedimentation, 8:filling, 9:emptying",
      "flags": Object {
        "0": "stepper",
        "1": "food",
        "2": "pid",
        "7": "sedimentation",
        "8": "filling",
        "9": "emptying",
      },
      "id": 4,
      "name": "Status disable",
    },
    Object {
      "description": "0:stepper, 1:food, 2:pid, 7:sedimentation, 8:filling, 9:emptying",
      "flags": Object {
        "0": "pcb temperature probe",
        "1": "liquid temperature probe",
        "2": "pcb temperature range",
        "3": "liquid temperature range",
        "4": "target temperature range",
        "5": "weight range",
      },
      "id": 6,
      "name": "Error: failed",
    },
    Object {
      "description": "0:stepper, 1:food, 2:pid, 7:sedimentation, 8:filling, 9:emptying",
      "flags": Object {
        "0": "pcb temperature probe",
        "1": "liquid temperature probe",
        "2": "pcb temperature range",
        "3": "liquid temperature range",
        "4": "target temperature range",
        "5": "weight range",
      },
      "id": 7,
      "name": "Error: recover",
    },
    Object {
      "description": "",
      "id": 20,
      "name": "Rotation start",
    },
    Object {
      "description": "",
      "id": 21,
      "name": "Rotation stop",
    },
    Object {
      "description": "",
      "id": 150,
      "name": "Not found log entry N",
    },
    Object {
      "description": "",
      "id": 255,
      "name": "Save all parameters",
    },
    Object {
      "description": "",
      "id": 256,
      "name": "Change value of A",
    },
    Object {
      "description": "",
      "id": 257,
      "name": "Change value of B",
    },
  ],
  "id": "6",
  "kind": "OpenBio6",
  "name": "Open bioreactor v6",
  "numberLogParameters": 26,
  "numberParameters": 68,
  "parameters": Array [
    Object {
      "description": "External temperature 1",
      "factor": 100,
      "label": "A",
      "name": "T° EXT 1",
      "unit": "°C",
      "variable": "externalTemperature1",
      "writable": false,
    },
    Object {
      "description": "External temperature 2",
      "factor": 100,
      "label": "B",
      "name": "T° EXT 2",
      "unit": "°C",
      "variable": "externalTemperature2",
      "writable": false,
    },
    Object {
      "description": "Temperature of the bioreactor circuit",
      "factor": 100,
      "label": "C",
      "name": "T° PCB",
      "unit": "°C",
      "variable": "pcbTemp",
      "writable": false,
    },
    Object {
      "description": "PID absolute value",
      "factor": 1,
      "label": "D",
      "name": "Pid",
      "unit": "",
      "variable": "pidTemp",
      "writable": false,
    },
    Object {
      "description": "Target temperature",
      "factor": 100,
      "label": "E",
      "name": "T° target",
      "unit": "°C",
      "variable": "targetTemp",
      "writable": true,
    },
    Object {
      "description": "Weight of the bioreactor tank, in internal value",
      "factor": 1,
      "label": "F",
      "name": "Weight",
      "unit": "",
      "variable": "weight",
      "writable": false,
    },
    Object {
      "description": "Weight of the bioreactor tank, in gr if calibrated",
      "factor": 1,
      "label": "G",
      "name": "Weight (g)",
      "unit": "g",
      "variable": "grWeight",
      "writable": false,
    },
    Object {
      "description": "Weight min in internal unit",
      "factor": 1,
      "label": "H",
      "name": "Weight min",
      "unit": "",
      "variable": "minWeight",
      "writable": false,
    },
    Object {
      "description": "Weight max in internal unit",
      "factor": 1,
      "label": "I",
      "name": "Weight max",
      "unit": "",
      "variable": "maxWeight",
      "writable": false,
    },
    Object {
      "label": "J",
    },
    Object {
      "label": "K",
    },
    Object {
      "label": "L",
    },
    Object {
      "label": "M",
    },
    Object {
      "label": "N",
    },
    Object {
      "label": "O",
    },
    Object {
      "label": "P",
    },
    Object {
      "label": "Q",
    },
    Object {
      "label": "R",
    },
    Object {
      "label": "S",
    },
    Object {
      "label": "T",
    },
    Object {
      "label": "U",
    },
    Object {
      "label": "V",
    },
    Object {
      "description": "Current step in the pipeline",
      "factor": 1,
      "label": "W",
      "name": "Current step",
      "unit": "",
      "variable": "currentStep",
      "writable": false,
    },
    Object {
      "description": "Current step wait time",
      "factor": 1,
      "label": "X",
      "name": "Current wait time",
      "unit": "min",
      "variable": "currentWaitTime",
      "writable": false,
    },
    Object {
      "description": "
            bit 0: pcb probe, 1: liquid probe, 2: pcb temperature,
            3: liquid temperature, 4: target temp. range, 5: weight range",
      "factor": 1,
      "flags": Object {
        "0": "PCB temperature probe error",
        "1": "External temperature 1 probe error",
        "2": "External temperature 2 probe error",
        "3": "PCB temperature out of range",
        "4": "External temperature 1 out of range",
        "5": "External temperature 2 out of range",
        "6": "Target temperature out of range",
        "7": "Weight out of range",
      },
      "label": "Y",
      "name": "Error",
      "unit": "",
      "variable": "error",
      "writable": true,
    },
    Object {
      "description": "Status of the Bioreactor, the bits of this integer code
        for the state of specific elements of the reactor (eg. motor ON/OFF, PUMP ON/OFF etc.).
        bits: 0: stepper, 1: weight, 2: pid, 7: sedimentation, 8: filling, 9: emptying
        ",
      "factor": 1,
      "flags": Object {
        "0": "pid",
        "1": "stepper",
        "2": "output 1",
        "3": "output 2",
        "4": "output 3",
        "5": "output 4",
      },
      "label": "Z",
      "name": "Status",
      "unit": "",
      "variable": "status",
      "writable": true,
    },
    Object {
      "description": "",
      "factor": 1,
      "label": "AA",
      "name": "Stepper speed",
      "unit": "RPM",
      "variable": "stepperSpeed",
      "writable": true,
    },
    Object {
      "description": "Number of step before changing direction. 1 tour = 200 steps",
      "factor": 1,
      "label": "AB",
      "name": "Stepper steps",
      "unit": "",
      "variable": "stepperSteps",
      "writable": true,
    },
    Object {
      "description": "Time to wait in (s) before between stirring periods",
      "factor": 1,
      "label": "AC",
      "name": "Stepper off delay",
      "unit": "s",
      "variable": "stepperOffDelay",
      "writable": true,
    },
    Object {
      "description": "Factor allowing to convert the internal weight value to g",
      "factor": 1,
      "label": "AD",
      "name": "Weight factor",
      "unit": "",
      "variable": "weightFactor",
      "writable": false,
    },
    Object {
      "description": "",
      "factor": 1,
      "label": "AE",
      "name": "Weight offset",
      "unit": "",
      "variable": "weightOffset",
      "writable": false,
    },
    Object {
      "label": "AF",
    },
    Object {
      "label": "AG",
    },
    Object {
      "label": "AH",
    },
    Object {
      "label": "AI",
    },
    Object {
      "label": "AJ",
    },
    Object {
      "label": "AK",
    },
    Object {
      "label": "AL",
    },
    Object {
      "label": "AM",
    },
    Object {
      "label": "AN",
    },
    Object {
      "label": "AO",
    },
    Object {
      "label": "AP",
    },
    Object {
      "label": "AQ",
    },
    Object {
      "label": "AR",
    },
    Object {
      "label": "AS",
    },
    Object {
      "label": "AT",
    },
    Object {
      "label": "AU",
    },
    Object {
      "label": "AV",
    },
    Object {
      "label": "AW",
    },
    Object {
      "label": "AX",
    },
    Object {
      "label": "AY",
    },
    Object {
      "description": "pid - food - stepper : ex. 1: only stepper",
      "factor": 1,
      "flags": Object {
        "0": "pid",
        "1": "stepper",
        "2": "output 1",
        "3": "output 2",
        "4": "output 3",
        "5": "output 4",
      },
      "label": "AZ",
      "name": "Enable",
      "unit": "",
      "variable": "enable",
      "writable": true,
    },
    Object {
      "description": "Step 1",
      "label": "BA",
      "name": "Step 1",
      "variable": "step01",
    },
    Object {
      "description": "Step 2",
      "label": "BB",
      "name": "Step 2",
      "variable": "step02",
    },
    Object {
      "description": "Step 3",
      "label": "BC",
      "name": "Step 3",
      "variable": "step03",
    },
    Object {
      "description": "Step 4",
      "label": "BD",
      "name": "Step 4",
      "variable": "step04",
    },
    Object {
      "description": "Step 5",
      "label": "BE",
      "name": "Step 5",
      "variable": "step05",
    },
    Object {
      "description": "Step 6",
      "label": "BF",
      "name": "Step 6",
      "variable": "step06",
    },
    Object {
      "description": "Step 7",
      "label": "BG",
      "name": "Step 7",
      "variable": "step07",
    },
    Object {
      "description": "Step 8",
      "label": "BH",
      "name": "Step 8",
      "variable": "step08",
    },
    Object {
      "description": "Step 9",
      "label": "BI",
      "name": "Step 9",
      "variable": "step09",
    },
    Object {
      "description": "Step 10",
      "label": "BJ",
      "name": "Step 10",
      "variable": "step10",
    },
    Object {
      "description": "Step 11",
      "label": "BK",
      "name": "Step 11",
      "variable": "step11",
    },
    Object {
      "description": "Step 12",
      "label": "BL",
      "name": "Step 12",
      "variable": "step12",
    },
    Object {
      "description": "Step 13",
      "label": "BM",
      "name": "Step 13",
      "variable": "step13",
    },
    Object {
      "description": "Step 14",
      "label": "BN",
      "name": "Step 14",
      "variable": "step14",
    },
    Object {
      "description": "Step 15",
      "label": "BO",
      "name": "Step 15",
      "variable": "step15",
    },
    Object {
      "description": "Step 16",
      "label": "BP",
      "name": "Step 16",
      "variable": "step16",
    },
  ],
  "url": "",
}
`;
